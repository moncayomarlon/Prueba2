name: CI & Despliegue a GitHub Pages

on:
  push:
    branches: ["main", "frontend"] # Se activa con cada push a la rama 'main'
  pull_request:
    branches: ["main"] # Tambi√©n se activa con cada Pull Request
  workflow_dispatch: # Permite ejecuci√≥n manual

concurrency:
  group: 'CI-CD-GHPages'
  cancel-in-progress: true

jobs:
  # Job 1: Verificaci√≥n de C√≥digo (LINTING B√ÅSICO)
  verificar_codigo:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout del Repositorio
        uses: actions/checkout@v4

      - name: üîç Mostrar archivos (Opcional, para depurar)
        run: ls -R

      # Aqu√≠ ir√≠a un linter de HTML/CSS m√°s avanzado,
      # pero para un CI b√°sico, solo verificamos que los archivos existan.
      - name: ‚úÖ Verificar archivos principales
        run: |
          if [ -f index.html ] && [ -f index.css ]; then
            echo "Archivos HTML y CSS encontrados. ¬°CI B√°sico Superado!"
          else
            echo "Error: Faltan archivos index.html o index.css"
            exit 1
          fi

  # Job 2: Despliegue de la P√°gina (Se ejecuta SOLO si la verificaci√≥n pasa)
  desplegar_pagina:
    needs: verificar_codigo # Depende de que el job de verificaci√≥n termine con √©xito
    if: github.ref == 'refs/heads/main' # Solo despliega si es la rama 'main'
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    permissions:
      contents: read
      pages: write
      id-token: write

    steps:
      - name: Checkout del Repositorio
        uses: actions/checkout@v4

      - name: Configurar GitHub Pages
        uses: actions/configure-pages@v5

      - name: Subir Artifactos de Despliegue
        uses: actions/upload-pages-artifact@v3
        with:
          # El directorio que contiene tus archivos HTML y CSS
          path: './'

      - name: Iniciar Despliegue a Pages
        id: deployment
        uses: actions/deploy-pages@v4